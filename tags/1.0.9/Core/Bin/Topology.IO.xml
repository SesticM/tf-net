<?xml version="1.0"?>
<doc>
<assembly>
<name>
Topology.IO
</name>
</assembly>
<members>
<member name="F:Topology.IO.CurveTessellation.None">
	<summary>
 No tessellation, meaning that curves will get converted either into straight segments or
 generic curves, depending on reader/writer curve-based geometry implementation.
 <see cref="P:Topology.IO.GeometryReader.CurveTessellationValue"/> parameter is ignored.
 </summary>
	<remarks></remarks>
</member><member name="F:Topology.IO.CurveTessellation.Linear">
	<summary>
 Curves are tessellated by means of linear points sampling. Linear sampling
 divides a curve into equal-sized segments. Number of segments depends on the
 value stored in <see cref="P:Topology.IO.GeometryReader.CurveTessellationValue"/>. If 
 <see cref="P:Topology.IO.GeometryReader.CurveTessellationValue"/> is negative or zero,
 default value used for tessellation is <c>16</c>.
 </summary>
	<remarks></remarks>
</member><member name="F:Topology.IO.CurveTessellation.Scaled">
	<summary>
 Curves are tessellated by means of linear points sampling, where size of each
 equal-sized segment depends on size (scale) of overall curve geometry. Smaller
 the geometry, resulting number of segments is lower. Similar algorithm is 
 used for on-screen curve tesselation.
 Overall scale factor can be set via <see cref="P:Topology.IO.GeometryReader.CurveTessellationValue"/>
 property value. If <see cref="P:Topology.IO.GeometryReader.CurveTessellationValue"/> is
 negative or zero, default value used for tessellation is <c>1</c>.
 </summary>
	<remarks></remarks>
</member><member name="T:Topology.IO.CurveTessellation">
	<summary>
 Defines algorithm used for curve-based geometries tesselation.
 <para>
 Curves need to be tessellated (broken up into lines) in order to be converted to
 JTS feature representation. The degree of tessellation determines how accurate the
 converted curve will be (how close it will approximate the original curve geometry)
 and how much performance overhead is required to generate the representation of a curve.
 </para>
	</summary>
	<remarks></remarks>
</member><member name="P:Topology.IO.GeometryReader.CurveTessellationMethod">
	<summary>
 Method used for curve-based geometries tesselation. For more information
 see <see cref="T:Topology.IO.CurveTessellation"/> enumerator description.
 Default value is <see cref="F:Topology.IO.CurveTessellation.Linear"/>.
 </summary>
	<value>Method used for curve-based geometries tesselation.</value>
	<remarks></remarks>
</member><member name="P:Topology.IO.GeometryReader.CurveTessellationValue">
	<summary>
 Gets or sets a parameter for curve tessellation method set by <see cref="P:Topology.IO.GeometryReader.CurveTessellationMethod"/>.
 For exact parameter definition see <see cref="T:Topology.IO.CurveTessellation"/> enumerator description.
 </summary>
	<value>Curve tessellation method parameter value.</value>
</member><member name="P:Topology.IO.GeometryReaderWriter.GeometryFactory">
	<summary>
 Returns current <see cref="P:Topology.IO.GeometryReaderWriter.GeometryFactory"/> used to build geometries.
 </summary>
	<value></value>
	<returns>Current <see cref="P:Topology.IO.GeometryReaderWriter.GeometryFactory"/> instance.</returns>
	<remarks>
 If there's no <see cref="P:Topology.IO.GeometryReaderWriter.GeometryFactory"/> set within class constructor,
 a <c>Default</c> factory will be automatically instantiated. Otherwise,
 user-supplied <see cref="P:Topology.IO.GeometryReaderWriter.GeometryFactory"/> will be used during geometry
 building process.
 </remarks>
</member><member name="P:Topology.IO.GeometryReaderWriter.PrecisionModel">
	<summary>
 Returns current <see cref="P:Topology.IO.GeometryReaderWriter.PrecisionModel"/> of the coordinates within any
 processed <see cref="T:Topology.Geometries.Geometry"/>.
 </summary>
	<value></value>
	<returns>Current <see cref="P:Topology.Geometries.GeometryFactory.PrecisionModel"/> instance.</returns>
	<remarks>
 If there's no <see cref="P:Topology.Geometries.GeometryFactory.PrecisionModel"/> set within class constructor,
 returns default <see cref="P:Topology.Geometries.GeometryFactory.PrecisionModel"/>. Default precision model is
 <c>Floating</c>, meaning full double precision floating point.
 </remarks>
</member><member name="P:Topology.IO.GeometryReaderWriter.AllowRepeatedCoordinates">
	<summary>
 Gets or sets whether processed geometries include equal sequential
 (repeated) coordinates. Default value is <c>False</c>, meaning that
 any repeated coordinate within given coordinate sequence will get collapsed.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member>
</members>
</doc>